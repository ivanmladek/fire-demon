apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "2"
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"name":"redis","namespace":"firecrawl-prod"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"redis"}},"template":{"metadata":{"labels":{"app":"redis"}},"spec":{"containers":[{"args":["if [ -n \"$REDIS_PASSWORD\" ]; then\n  echo \"Starting Redis with authentication\"\n  exec redis-server --bind 0.0.0.0 --requirepass \"$REDIS_PASSWORD\"\nelse\n  echo \"Starting Redis without authentication\"\n  exec redis-server --bind 0.0.0.0\nfi\n"],"command":["/bin/sh","-c"],"env":[{"name":"REDIS_PASSWORD","valueFrom":{"secretKeyRef":{"key":"REDIS_PASSWORD","name":"firecrawl-secret"}}}],"image":"redis:alpine","name":"redis"}]}}}}
  creationTimestamp: "2025-04-15T09:46:12Z"
  generation: 2
  name: redis
  namespace: firecrawl-prod
  resourceVersion: "1203286"
  uid: 6330ebb8-55e9-48a4-8b3d-f967e4e59875
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: redis
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/restartedAt: "2025-04-15T12:18:22+02:00"
      creationTimestamp: null
      labels:
        app: redis
    spec:
      containers:
      - args:
        - |
          if [ -n "$REDIS_PASSWORD" ]; then
            echo "Starting Redis with authentication"
            exec redis-server --bind 0.0.0.0 --requirepass "$REDIS_PASSWORD"
          else
            echo "Starting Redis without authentication"
            exec redis-server --bind 0.0.0.0
          fi
        command:
        - /bin/sh
        - -c
        env:
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              key: REDIS_PASSWORD
              name: firecrawl-secret
        image: redis:alpine
        imagePullPolicy: IfNotPresent
        name: redis
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
status:
  availableReplicas: 1
  conditions:
  - lastTransitionTime: "2025-04-15T09:46:12Z"
    lastUpdateTime: "2025-04-15T10:19:23Z"
    message: ReplicaSet "redis-5475f94c4c" has successfully progressed.
    reason: NewReplicaSetAvailable
    status: "True"
    type: Progressing
  - lastTransitionTime: "2025-04-16T10:13:04Z"
    lastUpdateTime: "2025-04-16T10:13:04Z"
    message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: "True"
    type: Available
  observedGeneration: 2
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1
